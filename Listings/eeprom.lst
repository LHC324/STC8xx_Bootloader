C51 COMPILER V9.60.0.0   EEPROM                                                            01/03/2023 21:14:42 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE EEPROM
OBJECT MODULE PLACED IN .\Objects\eeprom.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Src\eeprom.c LARGE OPTIMIZE(9,SPEED) BROWSE FLOATFUZZY(4) INCDIR(.\Inc) 
                    -DEBUG OBJECTEXTEND PRINT(.\Listings\eeprom.lst) OBJECT(.\Objects\eeprom.obj)

line level    source

   1          #include "eeprom.h"
   2          
   3          // #pragma OT(0)
   4          /**
   5           * @brief       配置STC8单片机EEPROM的等待时间
   6           * @version V1.0.0,2022/01/18
   7           * @author  LHC
   8           * @details
   9           * @param       None
  10           * @retval      None
  11           */
  12          static void IapConfigWaitTime()
  13          {
  14   1              uint32_t XTAL = FOSC / 1000000;
  15   1      
  16   1              if (XTAL >= 30) //>=30M
  17   1                      IAP_CONTR = WT_30M;
  18   1              else if (XTAL >= 24)
  19   1                      IAP_CONTR = WT_24M;
  20   1              else if (XTAL >= 20)
  21   1                      IAP_CONTR = WT_20M;
  22   1              else if (XTAL >= 12)
  23   1                      IAP_CONTR = WT_12M;
  24   1              else if (XTAL >= 6)
  25   1                      IAP_CONTR = WT_6M;
  26   1              else if (XTAL >= 3)
  27   1                      IAP_CONTR = WT_3M;
  28   1              else if (XTAL >= 2)
  29   1                      IAP_CONTR = WT_2M;
  30   1              else
  31   1                      IAP_CONTR = WT_1M;
  32   1      }
  33          
  34          /**
  35           * @brief       关闭iap功能
  36           * @version V1.0.0,2022/01/18
  37           * @author  LHC
  38           * @details
  39           * @param       None
  40           * @retval      None
  41           */
  42          void IapIdle()
  43          {
  44   1              IAP_CONTR = 0x00; // 关闭IAP功能
  45   1              IAP_CMD = 0x00;   // 清除命令寄存器
  46   1              IAP_TRIG = 0x00;  // 清除触发寄存器
  47   1              IAP_ADDRH = 0xFF; // 将地址设置到非IAP区域
  48   1              IAP_ADDRL = 0xFF;
  49   1      }
  50          
  51          /*********************************************************
  52           * 函数名：char IapRead(unsigned short addr)
  53           * 功能：  读函数  读出一个字节
  54           * 参数：
C51 COMPILER V9.60.0.0   EEPROM                                                            01/03/2023 21:14:42 PAGE 2   

  55           * 作者：
  56           * note：
  57           *
  58           **********************************************************/
  59          char IapRead(unsigned short addr)
  60          {
  61   1      #if (1 == EEPROM_USING_MOVC)
  62   1              addr += IAP_OFFSET;                                       // 使用 MOVC 读取 EEPROM 需要加上相应的偏移
  63   1              return *(unsigned char code *)(addr); // 使用 MOVC 读取数据
  64   1      #else
                      char dat = '\0';
              
                      IapConfigWaitTime();
                      IAP_CMD = 0x01; // EEPROM读命令
                      IAP_ADDRL = addr;
                      IAP_ADDRH = addr >> 8U;
                      IAP_TRIG = 0x5A; // 触发指令
                      IAP_TRIG = 0xA5;
                      dat = IAP_DATA;
              
                      if (IAP_CONTR & 0x10)
                      {
                              IAP_CONTR &= 0xEF;
                              return 0xA5;
                      }
                      else
                              return dat;
              #endif
  83   1      }
  84          
  85          /*********************************************************
  86           * 函数名：void IapProgram(unsigned short addr, char dat)
  87           * 功能：  指定地址写数据
  88           * 参数：
  89           * 作者：
  90           * note：
  91           *
  92           **********************************************************/
  93          void IapProgram(uint16_t addr, uint8_t dat)
  94          {
  95   1              IapConfigWaitTime();
  96   1              IAP_CMD = 0x02;                 // 设置IAP写命令
  97   1              IAP_ADDRL = addr;               // 设置IAP低地址
  98   1              IAP_ADDRH = addr >> 8U; // 设置IAP高地址
  99   1              IAP_DATA = dat;                 // 写IAP数据
 100   1              IAP_TRIG = 0x5a;                // 写触发命令(0x5a)
 101   1              IAP_TRIG = 0xa5;                // 写触发命令(0xa5)
 102   1              //_nop_();
 103   1              //      Delay_ms(5);//延时5毫秒
 104   1              IapIdle(); // 关闭IAP功能
 105   1      }
 106          
 107          /*********************************************************
 108           * 函数名：void IapErase(int addr)
 109           * 功能：  擦除指定地址的内容
 110           * 参数：
 111           * 作者：
 112           * note：擦除每次按照512B进行，仅提供首地址即可
 113           *
 114           **********************************************************/
 115          void IapErase(uint16_t addr)
 116          { // 使能IAP
C51 COMPILER V9.60.0.0   EEPROM                                                            01/03/2023 21:14:42 PAGE 3   

 117   1              IapConfigWaitTime();
 118   1              IAP_CMD = 0x03;                 // 设置IAP擦除命令
 119   1              IAP_ADDRL = addr;               // 设置IAP低地址
 120   1              IAP_ADDRH = addr >> 8U; // 设置IAP高地址
 121   1              IAP_TRIG = 0x5a;                // 写触发命令(0x5a)
 122   1              IAP_TRIG = 0xa5;                // 写触发命令(0xa5)
 123   1              // _nop_();                                             //
 124   1              IapIdle(); // 关闭IAP功能
 125   1                                 //  Delay_ms(4); //延时5毫秒
 126   1      }
 127          
 128          /*********************************************************
 129           * 函数名：void EEPROM_writeString(unsigned short Address,unsigned char *Pdata,unsigned short length);
 130           * 功能：  指定地址 写入数据
 131           * 参数：
 132           * 作者：
 133           * note：写数据一般请按照一个扇区一个扇区的来写，不然在擦除数据的时候会造
             -成数据丢失
 134           * 一个扇区的大小是 512字节
 135           *
 136           *
 137           *
 138           ***********************************************************************************/
 139          void IapWrites(uint16_t addr, const uint8_t *str, uint16_t len)
 140          {
 141   1              if (str)
 142   1              {
 143   2                      IapErase(addr);
 144   2                      while (len--)
 145   2                      {
 146   3                              IapProgram(addr, *str);
 147   3                              if (IapRead(addr) != *str)
 148   3                                      break;
 149   3                              addr++, str++;
 150   3                      }
 151   2              }
 152   1      }
 153          
 154          /**
 155           * @brief       从指定地址读取多个字节数据
 156           * @version V1.0.0,2022/01/18
 157           * @author  LHC
 158           * @details
 159           * @param       addr:开始地址, *Str: 指向目标缓冲区指针, Len:长度
 160           * @retval      None
 161           */
 162          void Iap_Reads(uint16_t addr, uint8_t *str, uint16_t len)
 163          {
 164   1              if (str)
 165   1              {
 166   2                      while (len--)
 167   2                      {
 168   3                              *str++ = IapRead(addr++);
 169   3                      }
 170   2              }
 171   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    410    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      23
C51 COMPILER V9.60.0.0   EEPROM                                                            01/03/2023 21:14:42 PAGE 4   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
