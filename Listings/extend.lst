C51 COMPILER V9.60.0.0   EXTEND                                                            01/03/2023 21:14:42 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE EXTEND
OBJECT MODULE PLACED IN .\Objects\extend.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Src\extend.c LARGE OPTIMIZE(9,SPEED) BROWSE FLOATFUZZY(4) INCDIR(.\Inc) 
                    -DEBUG OBJECTEXTEND PRINT(.\Listings\extend.lst) OBJECT(.\Objects\extend.obj)

line level    source

   1          #include "config.h"
   2          #include "usart.h"
   3          
   4          /**
   5           * @brief       把一个16位整型数转成十进制送串口发送.
   6           * @version V1.0.0,2022/01/18
   7           * @details
   8           * @param       num 要处理的16位整型数.
   9           * @retval      None
  10           */
  11          // void U16_To_Dec(uint16_t num)
  12          // {
  13          //     uint8_t i;
  14          //     uint8_t tmp[10];
  15          //     for (i = 4; i < 5; i--)
  16          //         tmp[i] = num % 10 + '0', num = num / 10;
  17          //     for (i = 0; i < 4; i++)
  18          //     {
  19          //         if (tmp[i] != '0')
  20          //             break;
  21          //         tmp[i] = ' ';
  22          //     }
  23          //     for (i = 0; i < 5; i++)
  24          //         Uart_PutByte(tmp[i]);
  25          // }
  26          
  27          /**
  28           * @brief       把一个32位长整型数转成十进制送串口发送.
  29           * @details
  30           * @param       num 要处理的32位整型数.
  31           * @retval      None
  32           * @version V1.0.0,2022/01/18
  33           */
  34          // void U32_To_Dec(uint32_t num)
  35          // {
  36          //     uint8_t i, k;
  37          //     uint8_t tmp[10];
  38          //     for (i = 8; i > 0; i--)
  39          //     {
  40          //         k = ((uint8_t)num) & 0x0f;
  41          //         if (k <= 9)
  42          //             tmp[i] = k + '0';
  43          //         else
  44          //             tmp[i] = k - 10 + 'A';
  45          //         num >>= 4;
  46          //     }
  47          //     for (i = 1; i < 9; i++)
  48          //         Uart_PutByte(tmp[i]);
  49          // }
  50          
  51          // uint8_t *uint32_to_string(uint32_t num)
  52          // {
  53          //     uint8_t i, k;
  54          //     static uint8_t tmp[10];
C51 COMPILER V9.60.0.0   EXTEND                                                            01/03/2023 21:14:42 PAGE 2   

  55          //     for (i = 8; i > 0; i--)
  56          //     {
  57          //         k = ((uint8_t)num) & 0x0f;
  58          //         if (k <= 9)
  59          //             tmp[i] = k + '0';
  60          //         else
  61          //             tmp[i] = k - 10 + 'A';
  62          //         num >>= 4;
  63          //     }
  64          //     return tmp;
  65          //     // for (i = 1; i < 9; i++)
  66          //     //     Uart_PutByte(tmp[i]);
  67          // }
  68          
  69          /**
  70           * @brief       字符串转整型.
  71           * @details
  72           * @param       inputstr 字符串指针.
  73           * @retval      16位整型数.
  74           * @version V1.0.0,2022/01/18
  75           */
  76          uint16_t Str_To_Int(uint8_t *inputstr)
  77          {
  78   1          uint16_t val = 0;
  79   1          uint8_t i;
  80   1      
  81   1          for (i = 0; i < 5; i++)
  82   1          {
  83   2              if ((inputstr[i] < '0') || (inputstr[i] > '9'))
  84   2                  break;
  85   2              val = val * 10 + inputstr[i] - '0';
  86   2          }
  87   1          return val;
  88   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    115    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       6
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
